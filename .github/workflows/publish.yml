name: Publish to PyPI

on:
  push:
    tags:
      - "v*"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: linux-x86_64
            target: x86_64-unknown-linux-gnu
            manylinux: manylinux_2_28
            sdist: 'true'
            cross: 'false'
          - name: linux-aarch64
            target: aarch64-unknown-linux-gnu
            manylinux: manylinux_2_28
            sdist: 'false'
            cross: 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup QEMU
        if: ${{ matrix.cross == 'true' }}
        uses: docker/setup-qemu-action@v3

      - name: Build wheels (Linux)
        uses: PyO3/maturin-action@v1
        with:
          command: build
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux }}
          args: --release --out wheelhouse
          sdist: ${{ matrix.sdist == 'true' }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-dist
          path: wheelhouse
          if-no-files-found: error

  build-macos:
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Build wheels (macOS universal2)
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release --target universal2-apple-darwin --out dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-universal2-dist
          path: dist
          if-no-files-found: error

  publish:
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos]
    environment:
      name: pypi
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.9.2"
          enable-cache: true

      - name: Download Linux x86_64 wheels
        uses: actions/download-artifact@v4
        with:
          name: linux-x86_64-dist
          path: wheelhouse/linux-x86_64

      - name: Download Linux aarch64 wheels
        uses: actions/download-artifact@v4
        with:
          name: linux-aarch64-dist
          path: wheelhouse/linux-aarch64

      - name: Download macOS wheels
        uses: actions/download-artifact@v4
        with:
          name: macos-universal2-dist
          path: wheelhouse/macos

      - name: Collate wheels
        run: |
          mkdir -p dist
          find wheelhouse -name "*.whl" -exec cp {} dist/ \;
          if compgen -G "wheelhouse/linux-x86_64/*.tar.gz" > /dev/null; then
            cp wheelhouse/linux-x86_64/*.tar.gz dist/
          fi

      - name: Smoke test manylinux wheel
        run: |
          wheel=$(ls dist/fast_bunkai-*-manylinux*_*_x86_64.whl | head -n1)
          uv run --isolated --no-project --with "$wheel" tests/smoke_test.py

      - name: Publish to PyPI
        run: uv publish dist/*
