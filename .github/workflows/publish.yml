name: Publish to PyPI

on:
  push:
    tags:
      - "v*"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: linux-x86_64
            args: --release --target x86_64-unknown-linux-gnu --compatibility manylinux_2_28 --out dist --sdist
          - name: linux-aarch64
            args: --release --target aarch64-unknown-linux-gnu --compatibility manylinux_2_28 --out dist
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Build wheels (Linux)
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: ${{ matrix.args }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-dist
          path: dist
          if-no-files-found: error

  build-macos:
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Build wheels (macOS universal2)
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release --target universal2-apple-darwin --out dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-universal2-dist
          path: dist
          if-no-files-found: error

  publish:
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos]
    environment:
      name: pypi
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.9.2"
          enable-cache: true

      - name: Download Linux x86_64 wheels
        uses: actions/download-artifact@v4
        with:
          name: linux-x86_64-dist
          path: dist

      - name: Download Linux aarch64 wheels
        uses: actions/download-artifact@v4
        with:
          name: linux-aarch64-dist
          path: dist

      - name: Download macOS wheels
        uses: actions/download-artifact@v4
        with:
          name: macos-universal2-dist
          path: dist

      - name: Smoke test manylinux wheel
        run: |
          wheel=$(ls dist/fast_bunkai-*-manylinux*_*_x86_64.whl | head -n1)
          uv run --isolated --no-project --with "$wheel" tests/smoke_test.py

      - name: Publish to PyPI
        run: uv publish --no-build --dist dist
